#include <stdio.h>

int main() {
    int n, f, rs[50], m[10], i, j, k, pf = 0;

    // Input number of page references
    printf("\nEnter number of page references -- ");
    scanf("%d", &n);

    // Input reference string
    printf("\nEnter the reference string -- ");
    for (i = 0; i < n; i++)
        scanf("%d", &rs[i]);

    // Input number of frames
    printf("\nEnter the available no. of frames -- ");
    scanf("%d", &f);

    // Initialize frames (m[]) to -1 (empty)
    for (i = 0; i < f; i++)
        m[i] = -1;

    printf("\nThe Page Replacement Process is:\n");

    for (i = 0; i < n; i++) {
        int flag = 0, pos = -1, farthest = i + 1;

        // Check if page is already in frames
        for (j = 0; j < f; j++) {
            if (m[j] == rs[i]) {
                flag = 1;
                break;
            }
            if (m[j] == -1)  // Find an empty frame
                pos = j;
        }

        // If page is not in frames, perform replacement
        if (!flag) {
            if (pos == -1) {  // If no empty frame, find the optimal replacement
                for (j = 0; j < f; j++) {
                    for (k = i + 1; k < n; k++) {
                        if (m[j] == rs[k]) {
                            if (k > farthest) {
                                farthest = k;
                                pos = j;
                            }
                            break;
                        }
                    }
                    if (k == n) {  // If page is never used again, replace it
                        pos = j;
                        break;
                    }
                }
            }
            m[pos] = rs[i];  // Replace the page
            pf++;  // Increment page fault count
        }

        // Print the frame contents
        for (j = 0; j < f; j++)
            printf("%d\t", m[j] != -1 ? m[j] : -1);

        if (!flag)
            printf("PF No. %d", pf);

        printf("\n");
    }

    printf("\nTotal number of page faults -- %d\n", pf);
    return 0;
}
